angular.module("agent",["cfp.loadingBar","ui-notification"]).config(["NotificationProvider",function(e){e.setOptions({delay:5e3,startTop:10,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"bottom"})}]).controller("MainController",["$scope","$http","$timeout","cfpLoadingBar","Notification",function(e,t,i,n,o){function s(t){1===t?(console.log("Connected on Server"),e.serverIsOn=!0,e.listAllPolicies(),clearInterval(r)):(console.log("Warn user to download/execute Agent-Desktop AND try again in 3000ms"),e.serverIsOn=!1,r=setTimeout(function(){window.SignerDesktopClient.connect(s,s,l)},3e3))}function l(t){i(function(){void 0!==t.error&&(null!==t.error&&"null"!==t.error?o.error({message:t.error}):o.error({message:"Unknown error"})),e.stopRequest()},100)}e.listCertificates=null,e.listAllPolicies=[],e.policy=null,e.signed=null,e.fileName=null,e.serverIsOn=!1,e.selectedCertificate=null;var r;e.startRequest=function(){n.start()},e.stopRequest=function(){n.complete()},window.SignerDesktopClient.setUriServer("wss://localhost:65156"),window.SignerDesktopClient.setDebug(!0),window.SignerDesktopClient.connect(s,s,l),e.listCerts=function(){e.startRequest(),window.SignerDesktopClient.listCerts().success(function(t){i(function(){e.listCertificates=t,e.stopRequest()},100)})},e.setCertificate=function(t){console.log(t.alias),e.selectedCertificate=t},e.signText=function(t){e.startRequest(),window.SignerDesktopClient.signer(e.selectedCertificate.alias,e.selectedCertificate.provider,t,e.policy).success(function(t){i(function(){e.signed=t.signed,e.stopRequest()},100)})},e.listAllPolicies=function(){e.startRequest(),window.SignerDesktopClient.listPolicies().success(function(t){i(function(){e.listPolicies=t.policies,e.policy="AD_RB_CADES_2_2",e.stopRequest()},100)})},e.getfiles=function(){e.startRequest(),window.SignerDesktopClient.getFiles().success(function(t){i(function(){e.fileName=t.fileName,e.stopRequest()},100)})},e.assinarArquivo=function(t){e.startRequest(),window.SignerDesktopClient.signerFile(e.selectedCertificate.alias,e.selectedCertificate.provider,e.fileName,e.policy).success(function(t){i(function(){e.signedFileName=t.signed,e.stopRequest()},100)})},e.status=function(){e.startRequest(),window.SignerDesktopClient.status().success(function(t){console.log(t),e.stopRequest()})},e.shutdown=function(){window.SignerDesktopClient.shutdown()},e.logout=function(){window.SignerDesktopClient.logoutPKCS11()}}]);